buildscript {
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.5'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    }
}

plugins {
    id 'org.ajoberstar.github-pages' version '1.1.0'
    id 'org.asciidoctor.gradle.asciidoctor' version '1.5.1'
}

project.ext {
    githubUrl = 'https://github.com/craigburke/document-builder'
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'codenarc'
    apply plugin: 'nebula.provided-base'

    group = 'com.craigburke.document'
    version = '0.5.1'
    targetCompatibility = 1.6

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        provided 'org.codehaus.groovy:groovy-all:2.4.5'
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
        testCompile 'cglib:cglib-nodep:3.1'
        testCompile 'org.objenesis:objenesis:2.1'
        codenarc 'org.codenarc:CodeNarc:0.23'
    }

    codenarc {
        toolVersion = '0.23'
        configFile = file("${rootProject.projectDir}/config/codenarc/rules.groovy")
    }
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    afterEvaluate { Project project ->
        bintray {
            user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : ''
            key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : ''
            publications = ['maven']
            publish = true

            pkg {
                repo = 'document-builder'
                userOrg = 'craigburke'
                name = project.artifactId
                githubRepo = project.githubUrl
                githubReleaseNotesFile = 'README.adoc'
                version {
                    mavenCentralSync {
                        user = project.hasProperty('mavenCentralUsername') ? project.mavenCentralUsername : ''
                        password = project.hasProperty('mavenCentralPassword') ? project.mavenCentralPassword : ''
                    }
                }
            }
        }

        publishing {
            publications {
                maven(MavenPublication) {
                    artifactId project.artifactId
                    pom.withXml {
                        asNode().children().last() + {
                            resolveStrategy = Closure.DELEGATE_FIRST
                            name project.artifactId
                            description project.description
                            url project.githubUrl
                            scm {
                                url project.githubUrl
                                connection "scm:${project.githubUrl}.git"
                                developerConnection "scm:${project.githubUrl}.git"
                            }
                            licenses {
                                license {
                                    name 'Mozilla Public License, Version 2.0'
                                    url 'https://www.mozilla.org/MPL/2.0/'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'craigburke'
                                    name 'Craig Burke'
                                    email 'craig@craigburke.com'
                                }
                            }
                        }
                    }
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                }
            }
        }
    }

    task release {
        dependsOn bintrayUpload, publishGhPages
    }

}

asciidoctor {
    sourceDir = file('docs')

    resources {
        from(sourceDir) {
            include 'css/**', 'images/**'
        }
    }

    attributes 'source-highlighter': 'prettify',
            'docinfo1': ['version': project.version],
            'imagesdir': 'images',
            'stylesdir': 'css',
            icons: 'font',
            'toc': 'left',
            version: project.version,
            'projectUrl': 'https://github.com/craigburke/document-builder'
}

githubPages {
    repoUri = "${project.githubUrl}.git"

    credentials {
        username = project.hasProperty('githubToken') ? project.githubToken : ''
        password = ''
    }

    pages {
        from file(asciidoctor.outputDir.path + '/html5')
    }
}

publishGhPages.dependsOn asciidoctor

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
